@page "/accountActions/{Username}/{AcctNum}"
@using LedgrLogic
@inject NavigationManager NavigationManager

@if (Show)
{
    <link rel="stylesheet" href="home.css"/>
    <body>
    <div class="modal-backdrop">
        <div class="dialog-card">
            <div class="dialog-header">
                <h2>What would you like to do with Account: #@AcctNum?</h2>
                <button @onclick="Close" aria-label="Close dialog"
                        style="background:none;border:0;font-size:18px;cursor:pointer">âœ•
                </button>
            </div>
            
            <div style="display: grid; place-items: center;">
                <div>
                    <button type="button" class="view btn">View</button>
                    <button type="button" class="edit btn">Edit</button>
                    <button type="button" class="deactivate btn">Deactivate</button>
                </div>
            </div>
        </div>
    </div>
    </body>
}

@code {
    [Parameter] public bool Show { get; set; }
    [Parameter] public EventCallback<bool> ShowChanged { get; set; }

    [Parameter] public string Username { get; set; }
    [Parameter] public string AcctNum { get; set; }

    public string Alert { get; set; } = string.Empty;
    
    private async Task Close()
    {
        if (ShowChanged.HasDelegate)
            await ShowChanged.InvokeAsync(false);
    }
    
    public void ViewAccount()
    {
        NavigationManager.NavigateTo($"/CoAEventLog/{Username}/{AcctNum}");
    }

    public void EditAccount()
    {
        NavigationManager.NavigateTo($"/CoAFormEdit/{Username}/{AcctNum}");
    }

    public async void DeactivateAccount()
    {
        try
        {
            await Admin.DeactivateAccount(Convert.ToInt32(AcctNum));
        }
        catch (AccountBalanceGreaterThanZeroException e)
        {
            Alert = e.Message;
        }
        catch (Exception e)
        {
            Console.WriteLine(e.Message);
        }
    }

}