@page "/cUser"
@using System.Reflection
@using LedgrLogic
@using MudBlazor
@inject NavigationManager NavigationManager
@inject IJSRuntime JSRuntime

<!doctype html>
<html lang="en">
<head>
  <meta charset="utf-8" />
  <meta name="viewport" content="width=device-width, initial-scale=1" />
  <title>Create New User</title>

  <!-- Free fonts -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Oswald:wght@400;600;700&display=swap" rel="stylesheet">
  <link rel="stylesheet" href="/styles.css" />
</head>
<body class="page page--login"><!-- reuse header style like Figma -->

  <!-- Header band w/ centered logo -->
  <header class="site-header">
    <div class="container header-inner">
      <img src="/logo-slogan.png" alt="LEDGR — The smart way to balance business" class="brand-logo" />
    </div>
  </header>
  <NavLink class="link" href="/" aria-label="Return to previous page">← Return to Previous Page</NavLink>
  <main class="container container-center">
    <section class="cardCreateUser" aria-labelledby="createTitle">

      <h1 id="createTitle" class="h2">Create a New User</h1>
      <p class="body1 muted" style="margin-top:0;">Please provide the following information</p>

      <!-- Inline alert placeholder -->
      <div id="createAlert" class="alert is-hidden" role="alert" aria-live="polite">
        <span class="alert__dot" aria-hidden="true"></span>
        <span class="alert__text" id="createAlertText"></span>
      </div>

      @if (InvalidPassword != string.Empty)
      {
      <div class="alert">
        <p><strong>@InvalidPassword</strong></p>
      </div>
      }
      @if (MissingField != string.Empty)
      {
      <div class="alert">
        <p><strong>@MissingField</strong></p>
      </div>
      }
      @if (EmptyAnswer != string.Empty)
      {
      <div class="alert">
        <p><strong>@EmptyAnswer</strong></p>
      </div>
      }

      <form id="createForm" class="form" novalidate>
        <!-- First Name -->
        <label class="field">
          <span class="field__label">First Name</span>
          <InputText @bind-Value="FirstName" id="firstName" name="firstName" type="text" class="input" placeholder="John" required />
        </label>

        <!-- Last Name -->
        <label class="field">
          <span class="field__label">Last Name</span>
          <InputText @bind-Value="LastName" id="lastName" name="lastName" type="text" class="input" placeholder="Doe" required />
        </label>

        <!-- Password -->
        <label class="field">
          <span class="field__label">Password</span>
          <InputText @bind-Value="Password" id="password" name="password" type="text" class="input" placeholder="PW" required />
        </label>

        <!-- Email Address -->
        <label class="field">
          <span class="field__label">Email Address</span>
          <InputText @bind-Value="EmailAddress" id="email" name="email" type="email" class="input" placeholder="email@ledgr.com" autocomplete="email" required />
        </label>

        <!-- DOB (MM/DD/YYYY only) -->
        <label class="field">
          <span class="field__label">Date of Birth</span>
          <InputText
            @bind-Value="DOB"
            id="dob"
            name="dob"
            type="text"
            class="input"
            inputmode="numeric"
            placeholder="MM/DD/YYYY"
            aria-describedby="dobHint"
            maxlength="10"
            required
          />
          <p id="dobHint" class="caption muted">Format: MM/DD/YYYY</p>
        </label>

        <!-- Address -->
        <label class="field">
          <span class="field__label">Address</span>
          <InputText @bind-Value="Address" id="address" name="address" class="input" placeholder="Home Address" required />
        </label>
        

        <!-- Auto-generated username (read-only preview) -->
        <label class="field">
          <span class="field__label">Auto-Generated Username</span>
          <InputText @bind-Value="Username" id="username" name="username" type="text" class="input" placeholder="jdoe1025" readonly />
          <p class="caption muted">
            Rule: first initial + last name + <code>MMyy</code> of date registered
            (eg. jdoe0101)
          </p>
          <button @onclick="UpdateUsername" type="button" class="btn btn-secondary" id="updateUsername">Generate</button>
        </label>

        <!-- Security Questions -->
        <label class="field">
          <span class="field__label">Security Question 1</span>
          <InputSelect @bind-Value="Q1" id="Q1" name="role" class="SecurityQuestion">
            <option value="What was your first car?" selected>What was your first car?</option>
            <option value="What is your mother's maiden name?">What is your mother's maiden name?</option>
            <option value="What year did you graduate High School?">What year did you graduate High School?</option>
            <option value="What is the name of your first pet?">What is the name of your first pet?</option>
            <option value="In what city did your parents meet?">In what city did your parents meet?</option>
          </InputSelect>
        </label>

        <label class="field">
          <span class="field__label">Answer</span>
          <InputText @bind-Value="A1" id="Q1 Answer" class="input" placeholder="Answer to Security Question 1" required />
        </label>
        
        <label class="field">
          <span class="field__label">Security Question 2</span>
          <InputSelect @bind-Value="Q2" id="Q2" name="role" class="SecurityQuestion">
            <option value="What is your favorite color?" selected>What is your favorite color?</option>
            <option value="With whom did you go to Senior Prom?">With whom did you go to Senior Prom?</option>
            <option value="What was your first grade teacher's name?">What was your first grade teacher's name?</option>
            <option value="When was the last time you expanded your domain?">When was the last time you expanded your domain?</option>
            <option value="What was your favorite video game system?">What was your favorite video game system?</option>
          </InputSelect>
        </label>

        <label class="field">
          <span class="field__label">Answer</span>
          <InputText @bind-Value="A2" id="Q2 Answer" class="input" placeholder="Answer to Security Question 2" required />
        </label>

        <label class="field">
          <span class="field__label">Security Question 3</span>
          <InputSelect @bind-Value="Q3" id="Q3" name="role" class="SecurityQuestion">
            <option value="How many siblings do you have?" selected>How many siblings do you have?</option>
            <option value="Who was your best friend in 12th grade?">Who was your best friend in 12th grade?</option>
            <option value="What was you dream job as a child?">What was you dream job as a child?</option>
            <option value="What is the greatest achievement of your life?">What is the greatest achievement of your life?</option>
            <option value="Who was your first crush?">Who was your first crush?</option>
          </InputSelect>
        </label>

        <label class="field">
          <span class="field__label">Answer</span>
          <InputText @bind-Value="A3" id="Q3 Answer" class="input" placeholder="Answer to Security Question 3" required />
        </label>

        <!-- Actions -->
        <div class="actions">
          <button @onclick="ClearForm" type="button" class="btn btn-secondary" id="btnClearCreate">Clear</button>
          <button @onclick="VerifyUserData" type="button" class="btn btn-primary">Submit</button>
        </div>

        <p class="center" style="margin-top:8px;"><span class="muted">Already have an account? </span>
          <NavLink class="link" href="/">
            Sign in
          </NavLink>
        </p>
      </form>
    </section>
  </main>
  <script>
    function scrollToTop() {
      document.documentElement.scrollTop = 0; // For modern browsers
      document.body.scrollTop = 0; // For older browsers
    }
  </script>
</body>
</html>

@code {
  // Data fields
  public string FirstName { get; set; } = string.Empty;
  public string LastName { get; set; } = string.Empty;
  public string EmailAddress { get; set; } = string.Empty;
  public string DOB { get; set; } = string.Empty;
  public string Address { get; set; } = string.Empty;
  public string Password { get; set; } = string.Empty;
  
  // Security Question IDs & Answers
  public string Q1 { get; set; } = "";
  public string Q2 { get; set; } = "";
  public string Q3 { get; set; } = "";

  public string A1 { get; set; } = string.Empty;
  public string A2 { get; set; } = string.Empty;
  public string A3 { get; set; } = string.Empty;

  
  // Will be their username if approved
  public string Username { get; set; } = "jdoe0101";
  
  // Precursor to Username generation
  public string Date = DateTime.Today.ToString("yyyy-MM-dd");
  public string FormattedDate = string.Empty;

  
  // Alerts
  public string InvalidPassword { get; set; } = string.Empty;
  public string MissingField { get; set; } = string.Empty;
  public string EmptyAnswer { get; set; } = string.Empty;
  
  public void UpdateUsername()
  {
    if (FirstName != string.Empty)
    {
      if (LastName != string.Empty)
      {
        FormattedDate = string.Empty;
        FormattedDate += Convert.ToString(Date[5]);
        FormattedDate += Convert.ToString(Date[6]);
        FormattedDate += Convert.ToString(Date[8]);
        FormattedDate += Convert.ToString(Date[9]);

        //Console.WriteLine($"{Date[5]} , {Date[6]} , {Date[8]} , {Date[9]}");
        //Console.WriteLine(FormattedDate);
        Username = FirstName[0] + LastName + FormattedDate;
        Username = Username.ToLower();
      }
    }
  }

  public async Task VerifyUserData()
  {
    // Reset Alerts
    MissingField = string.Empty;
    EmptyAnswer = string.Empty;
    InvalidPassword = string.Empty;

    if (FirstName != string.Empty && LastName != string.Empty && EmailAddress != string.Empty && DOB != String.Empty && Address != FilterOperator.String.Empty)
    {
      if (A1 != string.Empty && A2 != string.Empty && A3 != string.Empty)
      {
        if ((Q1 != string.Empty && A1 != string.Empty) && (Q2 != string.Empty && A2 != string.Empty) && (Q1 != string.Empty && A1 != string.Empty))
        {
          string userName = FirstName[0] + LastName + Convert.ToString(Date[5]) + Convert.ToString(Date[6]) + Convert.ToString(Date[8]) + Convert.ToString(Date[9]);
          userName = userName.ToLower();

          // Create input validation before proceeding
          try
          {
            string encryptedPassword = string.Empty;
            encryptedPassword = await LedgrLogic.Password.Validate(Password);
            if (encryptedPassword != string.Empty)
            {
              if (User.CreatePotentialUser(userName, encryptedPassword, EmailAddress, FirstName, LastName, DOB, Address, Q1, A1, Q2, A2, Q3, A3))
              {
                NavigationManager.NavigateTo($"/");
              }
            }
          }
          catch (PasswordRequirementsViolationException e)
          {
            await ScrollTop();
            InvalidPassword = e.Message;
          }
          catch (Exception e)
          {
            InvalidPassword = "An unknown error occurred. Please try again later";
            await ScrollTop();
          }
        }
        else
        {
          EmptyAnswer = "Please select and answer each security question to continue";
          await ScrollTop();
        }
      }
      else
      {
        MissingField = "Please fill out all fields to continue";
        await ScrollTop();
      }
    }
  }

  // When there is an error - Scroll to top of page so User can see what's wrong
  private async Task ScrollTop()
  {
    await JSRuntime.InvokeVoidAsync("scrollToTop");
  }

  private async void ClearForm()
  {
    // Reset all data
    FirstName  = string.Empty;
    LastName  = string.Empty;
    EmailAddress  = string.Empty;
    DOB = string.Empty;
    Address = string.Empty;
    Password  = string.Empty;
    
    Q1 = "1";
    Q2 = "2";
    Q3 = "3";

    A1 = string.Empty;
    A2 = string.Empty;
    A3 = string.Empty;
    await ScrollTop();
  }
}