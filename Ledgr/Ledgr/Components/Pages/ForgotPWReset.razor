@page "/fpwReset/{Username}"
@using LedgrLogic

<!doctype html> <!-- HTML5 document -->
<html lang="en">
<head>
  <meta charset="utf-8" /> <!-- UTF-8 encoding -->
  <meta name="viewport" content="width=device-width, initial-scale=1" /> <!-- Responsive on mobile -->
  <title>Forgot Password — Reset</title>

  <!-- Fonts (design system) -->
  <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Oswald:wght@400;600;700&display=swap" rel="stylesheet">

  <!-- App styles (tokens, components, layout) -->
  <link rel="stylesheet" href="styles.css" />
</head>

<!-- Auth page shell -->
<body class="page page--login">

<!-- Header -->
<header class="site-header">
  <div class="container header-inner">
    <img src="/logo-slogan.png" alt="LEDGR — The smart way to balance business" class="brand-logo" />
  </div>
</header>

<!-- Centered page content -->
<main class="container container--center">

  <!-- Reset password card -->
  <section class="card" aria-labelledby="resetTitle">
    <h1 id="resetTitle" class="h2">Create New Password</h1>
    <p class="body1 muted">Choose a strong password.</p>

    @if (Alert != string.Empty)
    {
    <div class="alert">
      <p><strong>@Alert</strong></p>
    </div>
    }

    <!-- Reset form (client-side validation only) -->
    <form id="fpFormReset" class="form" novalidate>
      <!-- New password with show/hide toggle -->
      @if (!showNewPW)
      {
        <label class="field">
          <span class="field__label">New Password</span>
          <div class="input input--with-addon">
            <InputText @bind-Value="NewPW" id="newPwd" type="password" class="input__control" required/>
            <button @onclick="ChangeVisibility1" type="button" class="icon-btn" id="toggleNewPwd" aria-label="Show password">
              <img src="hidden.svg" class="icon" alt="Show"/>
            </button>
          </div>
        </label>
      }
      @if (showNewPW)
      {
        <label class="field">
          <span class="field__label">New Password</span>
          <div class="input input--with-addon">
            <InputText @bind-Value="NewPW" id="newPwd" class="input__control" required/>
            <button @onclick="ChangeVisibility1" type="button" class="icon-btn" id="toggleNewPwd" aria-label="Show password">
              <img src="visible.svg" class="icon" alt="Show"/>
            </button>
          </div>
        </label>
      }

      <!-- Confirmation must match new password -->
      @if (!showConPW)
      {
        <label class="field">
          <span class="field__label">Confirm Password</span>
          <div class="input input--with-addon">
            <InputText @bind-Value="ConPW" id="newPwd" type="password" class="input__control" required/>
            <button @onclick="ChangeVisibility2" type="button" class="icon-btn" id="toggleNewPwd" aria-label="Show password">
              <img src="hidden.svg" class="icon" alt="Show"/>
            </button>
          </div>
        </label>
      }
      @if (showConPW)
      {
        <label class="field">
          <span class="field__label">Confirm Password</span>
          <div class="input input--with-addon">
            <InputText @bind-Value="ConPW" id="newPwd" class="input__control" required/>
            <button @onclick="ChangeVisibility2" type="button" class="icon-btn" id="toggleNewPwd" aria-label="Show password">
              <img src="visible.svg" class="icon" alt="Show"/>
            </button>
          </div>
        </label>
      }

      <!-- Actions: back to verify, save new password -->
      <div class="actions">
        <NavLink class="btn btn--secondary" href="/fpwVerify">Back</NavLink>
        <button @onclick="ResetPW" type="button" class="btn btn--primary">Save Password</button>
      </div>
    </form>
  </section>

</main>

<!-- App scripts (handles show/hide, validation, submit) -->
</body>
</html>

@code{
  [Parameter] public string Username { get; set; } = string.Empty;
  public string NewPW { get; set; } = string.Empty;
  public string ConPW { get; set; } = string.Empty;

  public bool showNewPW { get; set; } = false;
  public bool showConPW { get; set; } = false;
  
  // Alerts
  public string Alert { get; set; } = string.Empty;

  public async void ResetPW()
  {
    Alert = string.Empty;
    try
    {
      // Note: The following method will break if any of the password requirements are not met
      string encryptedPassword = await Password.Validate(NewPW);
      if (NewPW == ConPW)
      {
        User.ChangePassword(Username, NewPW);
      }
      else
      {
        Alert = "Passwords do not match";
      }
    }
    catch (PasswordRequirementsViolationException e)
    {
      Alert = e.Message;
    }
    catch (PasswordUsedBeforeException e)
    {
      Alert = e.Message;
    }
    
  }
  
  public void ChangeVisibility1()
  {
    showNewPW = !showNewPW;
  }
  public void ChangeVisibility2()
  {
    showConPW = !showConPW;
  }


}