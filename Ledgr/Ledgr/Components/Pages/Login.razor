@using System.Reflection.Metadata
@using LedgrLogic
@using MudBlazor
@inject NavigationManager NavigationManager
@page "/"

<head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>LEDGR — Sign In</title>

    <!-- Fonts -->
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600&family=Oswald:wght@400;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="styles.css" />
</head>
<body>
<header class="site-header" role="banner" aria-label="LEDGR global header">
    <div class="container header-inner">
        <img src="logo-slogan.png" alt="LEDGR — The smart way to balance business." class="brand-logo"/>

        <!-- Optional nav for future pages -->
        <!-- <nav aria-label="Primary">
          <ul class="nav">
            <li><a href="#" aria-current="page">User Management</a></li>
          </ul>
        </nav> -->

    </div>
</header>

<main class="site-main" role="main">
    <section class="auth" aria-labelledby="auth-title">
        <div class="card" role="region" aria-label="Sign in form">
            <h1 id="auth-title" class="auth-title">Sign In</h1>
            <p class="auth-subtitle">Use your username and password.</p>

            @if (FormEnabled)
            {
                <!-- Need to insert proper code for an alerts system -->
                @if (MissingRole != string.Empty)
                {
                    
                }
                @if (AccountMismatch != string.Empty)
                {
                    
                }
                @if (IncorrectLoginDetails != string.Empty)
                {
                    
                }
                <form class="form" action="" method="get" novalidate>
                    <div class="field">
                        <label for="email">Username</label>
                        <InputText id="email" name="email" type="email" autocomplete="email" placeholder="Username" required @bind-Value="Username"/>
                        <p class="field-help sr-only" id="email-help">Enter your username.</p>
                    </div>

                    <div class="field">
                        <div class="field-row">
                            <label for="password">Password</label>
                            <NavLink class="link-small" href="/fpwIdentify">Forgot password?</NavLink>
                        </div>
                        <InputText id="password" name="password" type="password" autocomplete="current-password" placeholder="••••••••" required @bind-Value="Password"/>
                        <p>You have @Attempts attempts remaining</p>
                    </div>

                    <!-- Role -->
                    <label class="field">
                        <span class="field__label">Role</span>
                        <InputSelect @bind-Value="Role" id="role" name="role" class="input">
                            <option value="Admin">Administrator</option>
                            <option value="Manager">Manager</option>
                            <option value="Accountant" selected>Accountant</option>
                        </InputSelect>
                    </label>

                    <button @onclick="VerifyLoginAsync" type="button" class="btn btn-primary">Sign in</button>

                    <p class="footer-line">
                        <span class="muted">Need an account?</span>
                        <NavLink href="/cUser" class="link">Create one</NavLink>
                    </p>
                    <AntiforgeryToken/>
                </form>
            }
            else
            {
                <form class="form" action="" method="get" novalidate>
                    <div class="field">
                        <label for="email">Username</label>
                        <InputText id="email" style="background-color: #A7A7A7" name="email" type="email" autocomplete="email" placeholder="Username" required @bind-Value="Username" readonly/>
                        <p class="field-help sr-only" id="email-help">Enter your username.</p>
                    </div>

                    <div class="field">
                        <div class="field-row">
                            <label for="password">Password</label>
                            <NavLink class="link-small" href="/fpwIdentify">Forgot password?</NavLink>
                        </div>
                        <InputText id="password" style="background-color: #A7A7A7" name="password" type="password" autocomplete="current-password" placeholder="••••••••" required @bind-Value="Password" readonly/>
                        <p>You have @Attempts attempts remaining</p>
                    </div>

                    <!-- Role -->
                    <label class="field">
                        <span class="field__label">Role</span>
                        <InputSelect @bind-Value="Role" id="role" name="role" disabled>
                            <option value="Admin">Administrator</option>
                            <option value="Manager">Manager</option>
                            <option value="Accountant" selected>Accountant</option>
                        </InputSelect>
                    </label>
                    
                    <button type="button" class="btn btn-primary">Sign in</button>

                    <p class="footer-line">
                        <span class="muted">Need an account?</span>
                        <NavLink href="/cUser" class="link">Create one</NavLink>
                    </p>
                    <AntiforgeryToken/>
                </form>
            }
        </div>
    </section>
</main>
</body>

@code {
    public string Username { get; set; } = string.Empty;
    public string Password { get; set; } = string.Empty;
    public int Attempts = 3;
    public bool FormEnabled { get; set; } = true;
    public string Role { get; set; } = string.Empty;
    
    // Errors / Alerts
    public string MissingRole = string.Empty;
    public string AccountMismatch = string.Empty;
    public string IncorrectLoginDetails = string.Empty;

    public void VerifyLoginAsync()
    {
        try
        {
            // Reset Alerts
            AccountMismatch = string.Empty;
            IncorrectLoginDetails = string.Empty;
            MissingRole = string.Empty;

            if (Role != string.Empty)
            {
                Task<User> verify = User.VerifyLogin(Username, Password);
                User currentUser = verify.Result;
                if (currentUser != null)
                {
                    if (currentUser is Admin)
                    {
                        if (Role == "Administrator")
                        {
                            NavigationManager.NavigateTo($"/adminHome/{Username}");
                        }
                        else
                        {
                            AccountMismatch = "Login Credentials do not match an account of the specified Role";
                        }
                    }
                    else if (currentUser is Manager)
                    {
                        if (Role == "Manager")
                        {
                            // Navigate to Manager Home
                        }
                        else
                        {
                            AccountMismatch = "Login Credentials do not match an account of the specified Role";
                        }
                    }
                    else
                    {
                        if (Role == "Accountant")
                        {
                            // Nav to acct home
                            AccountMismatch = "Login Credentials do not match an account of the specified Role";
                        }
                    }
                }
                else
                {
                    // Insert Code to let them know login failed
                    IncorrectLoginDetails = "Username or Password is invalid \n Please try again";
                    Attempts--;
                    if (Attempts <= 0)
                    {
                        DisableForm();
                    }
                }
            }
            else
            {
                MissingRole = "Please select an account role";
            }
        }
        catch (Exception e)
        {
            Console.WriteLine("Process Failed: " + e.Message);
        }

    }
    public void DisableForm()
    {
        Username = string.Empty;
        Password = string.Empty;
        FormEnabled = false;
    }

}